//最长震荡子串问题，多一步up,down重置
class Solution {
public:
    int maxTurbulenceSize(vector<int>& arr) {
        int up=1, down=1;
        int res=1;

        for(int i=1;i<arr.size();++i){
            if(arr[i]>arr[i-1]){
                up=down+1;
                down=1;
            }
            else if(arr[i]<arr[i-1]){
                down=up+1;
                up=1;
            }
            else{
                up=down=1;
            }
            res=max({res,up,down});
        }

        return res;

    }
};

//最长震荡子序列问题
class Solution {
public:
    int wiggleMaxLength(vector<int>& nums) {
        int up=1, down=1;

        for(int i=1;i<nums.size();++i){
            if(nums[i]>nums[i-1]){
                up=down+1;
            }
            else if(nums[i]<nums[i-1]){
                down=up+1;
            }
        }

        return max(up,down);
    }
};
