//原型是最长递增子序列问题

class Solution {
public:
    int maxEnvelopes(vector<vector<int>>& envelopes) {
        if(envelopes.empty())
            return 0;
        int n=envelopes.size();
        // c++11 匿名函数
        sort(envelopes.begin(),envelopes.end(),[](const auto &e1,const auto &e2){ 
            return e1[0]<e2[0]||((e1[0]==e2[0])&&(e1[1]>e2[1]));
        });

        vector<int> dp(n,1);
        int res=0;

        for(int i=0;i<n;++i){
            for(int j=0;j<i;++j){
                if(envelopes[j][1]<envelopes[i][1])
                    dp[i]=max(dp[i],dp[j]+1);
            }
            res=max(res,dp[i]);
        }

        return res;

    }
};
