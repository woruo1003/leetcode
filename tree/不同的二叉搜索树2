/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<TreeNode*> generateTrees(int n) {
        if(n==0)
            return {};
        return helper(1,n);
    }

    vector<TreeNode*> helper(int left, int right){
        if(left>right)
            return {nullptr};
        vector<TreeNode*> res;
        for(int i=left;i<=right;++i){
            vector<TreeNode*> leftNodes=helper(left,i-1);
            vector<TreeNode*> rightNodes=helper(i+1,right);
            for(TreeNode* leftNode:leftNodes){
                for(TreeNode* rightNode:rightNodes){
                    TreeNode *tmp=new TreeNode(i);
                    tmp->left=leftNode;
                    tmp->right=rightNode;
                    res.push_back(tmp);
                }
            }
        }

        return res;

    }
};
