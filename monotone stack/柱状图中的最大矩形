//找两边最近的比当前heights[i]矮的柱子
class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        stack<int> s;
        int n=heights.size();
        vector<int> left(n),right(n);

        int res=0;
        for(int i=0;i<n;++i){
            while(!s.empty()&&heights[s.top()]>=heights[i])
                s.pop();
            left[i]=s.empty()?-1:s.top();
            s.push(i);
        }
        s= stack<int> ();
        for(int i=n-1;i>=0;--i){
            while(!s.empty()&&heights[s.top()]>=heights[i])
                s.pop();
            right[i]=s.empty()?n:s.top();
            s.push(i);
        }

        for(int i=0;i<n;++i)
            res=max(res,(right[i]-left[i]-1)*heights[i]);
        return res;

    }
};
